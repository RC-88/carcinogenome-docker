shiny::runApp('/Volumes/My Passport/shinyApps/Xposome')
shiny::runApp('/Volumes/My Passport/shinyApps/Xposome')
runApp('/Volumes/My Passport/shinyApps/Xposome')
runApp('/Volumes/My Passport/shinyApps/Xposome')
runApp('/Volumes/My Passport/shinyApps/Xposome')
shiny::runApp('/Volumes/My Passport/shinyApps/Xposome')
runApp('/Volumes/My Passport/shinyApps/Xposome')
runApp('/Volumes/My Passport/shinyApps/Xposome')
knitr::opts_chunk$set(echo = TRUE, tidy = TRUE)
eSet <- readRDS("../data/TGGates_Subset.RDS")
View(eSet)
pro_ann <- eSet@phenoData@data
View(pro_ann)
runApp('/Volumes/My Passport/shinyApps/Xposome')
runApp('/Volumes/My Passport/shinyApps/Xposome')
runApp('/Volumes/My Passport/shinyApps/Xposome')
runApp('/Volumes/My Passport/shinyApps/Xposome')
runApp('/Volumes/My Passport/shinyApps/Xposome')
runApp('/Volumes/My Passport/shinyApps/Xposome')
fname="TGGate"
fname="TGGates"
dir.exists(paste0("data/", fname))
shiny::runApp('/Volumes/My Passport/shinyApps/Xposome')
runApp('/Volumes/My Passport/shinyApps/Xposome')
shiny::runApp('/Volumes/My Passport/shinyApps/Xposome')
shiny::runApp('/Volumes/My Passport/shinyApps/Xposome')
runApp('/Volumes/My Passport/Xposome_code/shinyApps')
runApp('/Volumes/My Passport/shinyApps/Xposome')
shiny::runApp('/Volumes/My Passport/shinyApps/Xposome')
runApp('/Volumes/My Passport/shinyApps/Xposome')
path="/Volumes/My Passport/shinyApps/Xposome/Data"
datasets <- c("ADIO", "MCF10A", "HEPG2")
d=1;
pro_ann <- read.csv(paste0(path, "/", datasets[d], "/Profile_Annotation.csv"), header = TRUE, row.names = 1, check.names = FALSE, stringsAsFactors = FALSE)
d=1;
pro_ann <- readRDS(paste0(path, "/", datasets[d], "/Profile_Annotation.RDS"))
path="/Volumes/My Passport/shinyApps/Xposome/Data"
datasets <- c("ADIO", "MCF10A", "HEPG2")
d=1;
pro_ann <- readRDS(paste0(path, "/", datasets[d], "/Profile_Annotation.RDS"))
path="/Volumes/My Passport/shinyApps/Xposome/Data"
datasets <- c("ADIPO", "MCF10A", "HEPG2")
d=1;
pro_ann <- readRDS(paste0(path, "/", datasets[d], "/Profile_Annotation.RDS"))
View(pro_ann)
View(pro_ann)
d=1;
pro_ann <- readRDS(paste0(path, "/", datasets[d], "/Profile_Annotation.RDS"))
# Define a  data frame to store number of replicates and ModZscores
chem_replicate <- data.frame(Chemical_Id = unique(pro_ann$Chemical_Id), Number_of_Replicates = NA, stringsAsFactors = FALSE)
for(i in 1:nrow(chem_replicate)){
#i=1;
#print(i)
chem_replicate$Number_of_Replicates[i] <- nrow(pro_ann %>% filter(Chemical_Id %in% chem_replicate$Chemical_Id[i]))
}
View(chem_replicate)
d=1;
pro_ann <- readRDS(paste0(path, "/", datasets[d], "/Profile_Annotation.RDS"))
# Define a  data frame to store number of replicates and ModZscores
chem_replicate <- data.frame(Chemical_Id = unique(pro_ann$Chemical_Id), Number_of_Replicates = NA, stringsAsFactors = FALSE)
for(i in 1:nrow(chem_replicate)){
#i=1;
#print(i)
chem_replicate$Number_of_Replicates[i] <- nrow(pro_ann %>% filter(Chemical_Id %in% chem_replicate$Chemical_Id[i]))
}
pro_ann$unique_ID_by_chem[which(pro_ann$unique_ID_by_chem %in% c(NA, "NA"))] <- ""
pro_ann <- pro_ann %in% left_join(chem_replicate)
d=1;
pro_ann <- readRDS(paste0(path, "/", datasets[d], "/Profile_Annotation.RDS"))
# Define a  data frame to store number of replicates and ModZscores
chem_replicate <- data.frame(Chemical_Id = unique(pro_ann$Chemical_Id), Number_of_Replicates = NA, stringsAsFactors = FALSE)
for(i in 1:nrow(chem_replicate)){
#i=1;
#print(i)
chem_replicate$Number_of_Replicates[i] <- nrow(pro_ann %>% filter(Chemical_Id %in% chem_replicate$Chemical_Id[i]))
}
pro_ann$unique_ID_by_chem[which(pro_ann$unique_ID_by_chem %in% c(NA, "NA"))] <- ""
pro_ann <- pro_ann %>%  left_join(chem_replicate)
View(pro_ann)
colNames <- colnames(proann)[which(colNames(pro_ann) %in% c("unique_ID_by_chem", "Number_of_Replicates"))]
colNames <- colnames(pro_ann)[which(colNames(pro_ann) %in% c("unique_ID_by_chem", "Number_of_Replicates"))]
colNames <- colnames(pro_ann)[which(colnames(pro_ann) %in% c("unique_ID_by_chem", "Number_of_Replicates"))]
colNames <- colnames(pro_ann)[which(!colnames(pro_ann) %in% c("unique_ID_by_chem", "Number_of_Replicates"))]
pro_ann <- pro_ann %>% select(colNames, c("unique_ID_by_chem", "Number_of_Replicates"))
pro_ann <- pro_ann %>% select(colNames, all_of(c("unique_ID_by_chem", "Number_of_Replicates")))
View(pro_ann)
d=1;
pro_ann <- readRDS(paste0(path, "/", datasets[d], "/Profile_Annotation.RDS"))
# Define a  data frame to store number of replicates and ModZscores
chem_replicate <- data.frame(Chemical_Id = unique(pro_ann$Chemical_Id), Number_of_Replicates = NA, stringsAsFactors = FALSE)
for(i in 1:nrow(chem_replicate)){
#i=1;
#print(i)
chem_replicate$Number_of_Replicates[i] <- nrow(pro_ann %>% filter(Chemical_Id %in% chem_replicate$Chemical_Id[i]))
}
pro_ann$unique_ID_by_chem[which(pro_ann$unique_ID_by_chem %in% c(NA, "NA"))] <- ""
pro_ann <- pro_ann %>%  left_join(chem_replicate)
colNames <- colnames(pro_ann)[which(!colnames(pro_ann) %in% c("unique_ID_by_chem", "TAS", "Number_of_Replicates"))]
pro_ann <- pro_ann %>% select(colNames, all_of(c("unique_ID_by_chem", "TAS", "Number_of_Replicates")))
d=2;
pro_ann <- readRDS(paste0(path, "/", datasets[d], "/Profile_Annotation.RDS"))
# Define a  data frame to store number of replicates and ModZscores
chem_replicate <- data.frame(Chemical_Id = unique(pro_ann$Chemical_Id), Number_of_Replicates = NA, stringsAsFactors = FALSE)
for(i in 1:nrow(chem_replicate)){
#i=1;
#print(i)
chem_replicate$Number_of_Replicates[i] <- nrow(pro_ann %>% filter(Chemical_Id %in% chem_replicate$Chemical_Id[i]))
}
pro_ann$unique_ID_by_chem[which(pro_ann$unique_ID_by_chem %in% c(NA, "NA"))] <- ""
pro_ann <- pro_ann %>%  left_join(chem_replicate)
colNames <- colnames(pro_ann)[which(!colnames(pro_ann) %in% c("unique_ID_by_chem", "TAS", "Number_of_Replicates"))]
pro_ann <- pro_ann %>% select(colNames, all_of(c("unique_ID_by_chem", "TAS", "Number_of_Replicates")))
d=3;
pro_ann <- readRDS(paste0(path, "/", datasets[d], "/Profile_Annotation.RDS"))
# Define a  data frame to store number of replicates and ModZscores
chem_replicate <- data.frame(Chemical_Id = unique(pro_ann$Chemical_Id), Number_of_Replicates = NA, stringsAsFactors = FALSE)
for(i in 1:nrow(chem_replicate)){
#i=1;
#print(i)
chem_replicate$Number_of_Replicates[i] <- nrow(pro_ann %>% filter(Chemical_Id %in% chem_replicate$Chemical_Id[i]))
}
pro_ann$unique_ID_by_chem[which(pro_ann$unique_ID_by_chem %in% c(NA, "NA"))] <- ""
pro_ann <- pro_ann %>%  left_join(chem_replicate)
colNames <- colnames(pro_ann)[which(!colnames(pro_ann) %in% c("unique_ID_by_chem", "TAS", "Number_of_Replicates"))]
pro_ann <- pro_ann %>% select(colNames, all_of(c("unique_ID_by_chem", "TAS", "Number_of_Replicates")))
path="/Volumes/My Passport/shinyApps/Xposome/Data"
datasets <- c("ADIPO", "MCF10A", "HEPG2")
for(d in seq_along(datasets)){
#d=3;
pro_ann <- readRDS(paste0(path, "/", datasets[d], "/Profile_Annotation.RDS"))
# Define a  data frame to store number of replicates and ModZscores
chem_replicate <- data.frame(Chemical_Id = unique(pro_ann$Chemical_Id), Number_of_Replicates = NA, stringsAsFactors = FALSE)
for(i in 1:nrow(chem_replicate)){
#i=1;
#print(i)
chem_replicate$Number_of_Replicates[i] <- nrow(pro_ann %>% filter(Chemical_Id %in% chem_replicate$Chemical_Id[i]))
}
pro_ann$unique_ID_by_chem[which(pro_ann$unique_ID_by_chem %in% c(NA, "NA"))] <- ""
pro_ann <- pro_ann %>%  left_join(chem_replicate)
colNames <- colnames(pro_ann)[which(!colnames(pro_ann) %in% c("unique_ID_by_chem", "TAS", "Number_of_Replicates"))]
pro_ann <- pro_ann %>% select(colNames, all_of(c("unique_ID_by_chem", "TAS", "Number_of_Replicates")))
saveRDS(pro_ann, paste0(path, "/", datasets[d], "/Profile_Annotation.RDS"))
}
runApp('/Volumes/My Passport/shinyApps/Xposome')
path="/Volumes/My Passport/shinyApps/Xposome/Data"
datasets <- c("ADIPO", "MCF10A", "HEPG2")
d=3;
pro_ann <- readRDS(paste0(path, "/", datasets[d], "/Profile_Annotation.RDS"))
# Define a  data frame to store number of replicates and ModZscores
chem_replicate <- data.frame(Chemical_Id = unique(pro_ann$Chemical_Id), Number_of_Replicates = NA, stringsAsFactors = FALSE)
d=1;
pro_ann <- readRDS(paste0(path, "/", datasets[d], "/Profile_Annotation.RDS"))
View(pro_ann)
d=1;
pro_ann <- readRDS(paste0(path, "/", datasets[d], "/Profile_Annotation.RDS"))
# Define a  data frame to store number of replicates and ModZscores
chem_replicate <- pro_ann %>%
group_by(Chemical_Id, unique_ID_by_chem) %>%
summarise(
Number_of_Replicates=n()
)
View(chem_replicate)
d=1;
pro_ann <- readRDS(paste0(path, "/", datasets[d], "/Profile_Annotation.RDS"))
# Define a  data frame to store number of replicates and ModZscores
chem_replicate <- pro_ann %>%
group_by(Chemical_Id, unique_ID_by_chem) %>%
summarise(
Number_of_Replicates=n()
)
pro_ann$unique_ID_by_chem[which(pro_ann$unique_ID_by_chem %in% c(NA, "NA"))] <- ""
pro_ann <- pro_ann %>%  left_join(chem_replicate)
pro_ann <- pro_ann %>% select(colNames, all_of(c("unique_ID_by_chem", "TAS", "Number_of_Replicates")))
d=1;
pro_ann <- readRDS(paste0(path, "/", datasets[d], "/Profile_Annotation.RDS"))
# Define a  data frame to store number of replicates and ModZscores
chem_replicate <- pro_ann %>%
group_by(Chemical_Id, unique_ID_by_chem) %>%
summarise(
Number_of_Replicates=n()
)
pro_ann$unique_ID_by_chem[which(pro_ann$unique_ID_by_chem %in% c(NA, "NA"))] <- ""
pro_ann <- pro_ann %>%  left_join(chem_replicate)
View(pro_ann)
colNames <- colnames(pro_ann)[which(!colnames(pro_ann) %in% c("unique_ID_by_chem", "TAS", "Number_of_Replicates"))]
pro_ann <- pro_ann %>% select(colNames, all_of(c("unique_ID_by_chem", "TAS", "Number_of_Replicates")))
path="/Volumes/My Passport/shinyApps/Xposome/Data"
datasets <- c("ADIPO", "MCF10A", "HEPG2")
for(d in seq_along(datasets)){
#d=1;
pro_ann <- readRDS(paste0(path, "/", datasets[d], "/Profile_Annotation.RDS"))
# Define a  data frame to store number of replicates and ModZscores
chem_replicate <- pro_ann %>%
group_by(Chemical_Id, unique_ID_by_chem) %>%
summarise(
Number_of_Replicates=n()
)
pro_ann$unique_ID_by_chem[which(pro_ann$unique_ID_by_chem %in% c(NA, "NA"))] <- ""
pro_ann <- pro_ann %>%  left_join(chem_replicate)
colNames <- colnames(pro_ann)[which(!colnames(pro_ann) %in% c("unique_ID_by_chem", "TAS", "Number_of_Replicates"))]
pro_ann <- pro_ann %>% select(colNames, all_of(c("unique_ID_by_chem", "TAS", "Number_of_Replicates")))
saveRDS(pro_ann, paste0(path, "/", datasets[d], "/Profile_Annotation.RDS"))
}
d=3;
pro_ann <- readRDS(paste0(path, "/", datasets[d], "/Profile_Annotation.RDS"))
# Define a  data frame to store number of replicates and ModZscores
chem_replicate <- pro_ann %>%
group_by(Chemical_Id, unique_ID_by_chem) %>%
summarise(
Number_of_Replicates=n()
)
pro_ann$unique_ID_by_chem[which(pro_ann$unique_ID_by_chem %in% c(NA, "NA"))] <- ""
pro_ann <- pro_ann %>%  left_join(chem_replicate)
colNames <- colnames(pro_ann)[which(!colnames(pro_ann) %in% c("unique_ID_by_chem", "TAS", "Number_of_Replicates"))]
pro_ann <- pro_ann %>% select(colNames, all_of(c("unique_ID_by_chem", "TAS", "Number_of_Replicates")))
View(pro_ann)
d=2;
pro_ann <- readRDS(paste0(path, "/", datasets[d], "/Profile_Annotation.RDS"))
# Define a  data frame to store number of replicates and ModZscores
chem_replicate <- pro_ann %>%
group_by(Chemical_Id, unique_ID_by_chem) %>%
summarise(
Number_of_Replicates=n()
)
pro_ann$unique_ID_by_chem[which(pro_ann$unique_ID_by_chem %in% c(NA, "NA"))] <- ""
pro_ann <- pro_ann %>%  left_join(chem_replicate)
colNames <- colnames(pro_ann)[which(!colnames(pro_ann) %in% c("unique_ID_by_chem", "TAS", "Number_of_Replicates"))]
pro_ann <- pro_ann %>% select(colNames, all_of(c("unique_ID_by_chem", "TAS", "Number_of_Replicates")))
path="/Volumes/My Passport/shinyApps/Xposome/Data"
datasets <- c("ADIPO", "MCF10A", "HEPG2")
for(d in seq_along(datasets)){
#d=2;
pro_ann <- readRDS(paste0(path, "/", datasets[d], "/Profile_Annotation.RDS"))
# Define a  data frame to store number of replicates and ModZscores
chem_replicate <- pro_ann %>%
group_by(Chemical_Id, unique_ID_by_chem) %>%
summarise(
Number_of_Replicates=n()
)
pro_ann$unique_ID_by_chem[which(pro_ann$unique_ID_by_chem %in% c(NA, "NA"))] <- ""
pro_ann <- pro_ann %>%  left_join(chem_replicate)
colNames <- colnames(pro_ann)[which(!colnames(pro_ann) %in% c("unique_ID_by_chem", "TAS", "Number_of_Replicates"))]
pro_ann <- pro_ann %>% select(colNames, all_of(c("unique_ID_by_chem", "TAS", "Number_of_Replicates")))
saveRDS(pro_ann, paste0(path, "/", datasets[d], "/Profile_Annotation.RDS"))
}
runApp('/Volumes/My Passport/shinyApps/Xposome')
path="/Volumes/My Passport/K2Example/TGGates_Example"
pro_ann <- read.csv(paste0(path, "/Profile_Annotation.csv"), header = TRUE, row.names = 1, check.names = FALSE, stringsAsFactors = FALSE)
View(pro_ann)
runApp('/Volumes/My Passport/shinyApps/Xposome')
runApp('/Volumes/My Passport/shinyApps/Xposome')
gs_collection="gs collection file"
gs_collection_file <- gsub(" ", "_", gs_collection)
dsmap <- list(gs_collection=gs_collection_file)
View(dsmap)
dsmap <- list(!!gs_collection=gs_collection_file)
dsmap <- list(paste0(gs_collection)=gs_collection_file)
dsmap <- list(`gs_collection`=gs_collection_file)
dsmap
gs_collection="gs collection file"
gs_collection
!!gs_collection
!!syms(gs_collection)
!!!syms(gs_collection)
!!!syms(paste0(gs_collection))
dsmap <- gs_collection
names(dsmap) <- gs_collection_file
dsmap
runApp('/Volumes/My Passport/shinyApps/Xposome')
gs_enrichment_version <- 7
paste0(
"<a href='", gs_collection_link, "'>Hallmark Pathways (v", gs_enrichment_version, ")</a><br>",
"<a href='", gs_collection_link, "'>C2 reactome Pathways (v", gs_enrichment_version, ")</a><br>",
"NURSA: Nuclear Receptor Signaling Atlas, consensome data for human"
)
s_collection_link <- "www.googl.com"
s_collection_link <- "www.google.com"
paste0(
"<a href='", gs_collection_link, "'>Hallmark Pathways (v", gs_enrichment_version, ")</a><br>",
"<a href='", gs_collection_link, "'>C2 reactome Pathways (v", gs_enrichment_version, ")</a><br>",
"NURSA: Nuclear Receptor Signaling Atlas, consensome data for human"
)
gs_collection_link <- "www.google.com"
paste0(
"<a href='", gs_collection_link, "'>Hallmark Pathways (v", gs_enrichment_version, ")</a><br>",
"<a href='", gs_collection_link, "'>C2 reactome Pathways (v", gs_enrichment_version, ")</a><br>",
"NURSA: Nuclear Receptor Signaling Atlas, consensome data for human"
)
runApp('/Volumes/My Passport/shinyApps/Xposome')
runApp('/Volumes/My Passport/shinyApps/Xposome')
runApp('/Volumes/My Passport/shinyApps/Xposome')
shiny::runApp('/Volumes/My Passport/shinyApps/Xposome')
shiny::runApp('/Volumes/My Passport/shinyApps/Xposome')
input$
runApp('/Volumes/My Passport/shinyApps/Xposome')
loginlist <- read_csv(paste0("data/User_Login_List.csv"))
library(digest)
libary(tidyverse)
digest('12345678',  serialize = FALSE)
loginlist <- read_csv(paste0("data/User_Login_List.csv"))
library(digest)
library(tidyverse)
digest('12345678',  serialize = FALSE)
loginlist <- read_csv(paste0("data/User_Login_List.csv"))
loginlist <- read_csv(paste0("./data/User_Login_List.csv"))
setwd("/Volumes/My Passport/shinyApps/Xposome")
loginlist <- read_csv(paste0("data/User_Login_List.csv"))
digest('12345678',  serialize = FALSE)
digest('reinachau',  serialize = FALSE)
View(loginlist)
loginlist$Password[which(loginlist$Username %in% "Reina")] <- digest('Reina', serialize = FALSE)
loginlist$Password[which(loginlist$Username %in% "Reina")] <- digest('Reina', serialize = FALSE)
loginlist$Password[which(loginlist$Username %in% "Xposome")] <- digest('Xposome', serialize = FALSE)
loginlist <- read_csv(paste0("data/User_Login_List.csv"))
loginlist$Password[which(loginlist$Username %in% "Reina")] <- digest('Reina', serialize = FALSE)
loginlist$Password[which(loginlist$Username %in% "Xposome")] <- digest('Xposome', serialize = FALSE)
library(digest)
library(tidyverse)
digest('12345678',  serialize = FALSE)
loginlist <- read_csv(paste0("data/User_Login_List.csv"))
write.csv(loginlist, paste0("data/User_Login_List_Orig.csv"))
write.csv(loginlist, paste0("data/User_Login_List_Orig.csv"))
loginlist <- read_csv(paste0("data/User_Login_List.csv"))
write.csv(loginlist, paste0("data/User_Login_List_Orig.csv"))
loginlist$Password[which(loginlist$Username %in% "Reina")] <- digest('Reina', serialize = FALSE)
loginlist$Password[which(loginlist$Username %in% "Xposome")] <- digest('Xposome', serialize = FALSE)
write.csv(loginlist, paste0("data/User_Login_List.csv"))
loginlist <- read_csv(paste0("data/User_Login_List.csv"))
loginlist <- read_csv(paste0("data/User_Login_List.csv"))
loginlist$Password[which(loginlist$Username %in% "Reina")] <- digest('Reina', serialize = FALSE)
loginlist$Password[which(loginlist$Username %in% "Xposome")] <- digest('Xposome', serialize = FALSE)
write.csv(loginlist, paste0("data/User_Login_List.csv"), row.names = FALSE)
shiny::runApp()
loginlist <- read_csv(paste0("data/User_Login_List.csv"))
##write.csv(loginlist, paste0("data/User_Login_List_Orig.csv"))
loginlist$Password[which(loginlist$Username %in% "Reina")] <- digest('Chau', serialize = FALSE)
loginlist$Password[which(loginlist$Username %in% "Xposome")] <- digest('Xposome', serialize = FALSE)
write.csv(loginlist, paste0("data/User_Login_List.csv"), row.names = FALSE)
runApp()
runApp()
runApp()
